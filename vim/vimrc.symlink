set nocompatible

if has('win32') || has('win64')
	set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after
endif

" Powerline
set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim

" ----------------------------------------------------------------------------
"  Vundle
" ----------------------------------------------------------------------------
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'
" Utilities & Add-Ons
Bundle 'Lokaltog/powerline'
Bundle 'Valloric/YouCompleteMe'
Bundle 'Raimondi/delimitMate'
Bundle 'scrooloose/syntastic'
Bundle 'kien/ctrlp.vim'
Bundle 'scrooloose/nerdtree'
Bundle 'jistr/vim-nerdtree-tabs'
Bundle 'tomtom/tcomment_vim'
Bundle 'mileszs/ack.vim'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-repeat'
" Colors
Bundle 'skwp/vim-colors-solarized'
" html/css
Bundle 'Valloric/MatchTagAlways'
" php
Bundle 'shawncplus/phpcomplete.vim'
" ruby
Bundle 'vim-ruby/vim-ruby'

" Filetypes & Syntax Highlighting
Bundle 'othree/html5.vim'
Bundle 'tpope/vim-haml'
Bundle 'vim-scripts/JSON.vim'
Bundle 'cakebaker/scss-syntax.vim'
Bundle 'kchmck/vim-coffee-script'
Bundle 'vim-scripts/jade.vim'
Bundle 'slim-template/vim-slim'
Bundle 'jtratner/vim-flavored-markdown'
Bundle 'StanAngeloff/php.vim'
Bundle 'vim-scripts/aspnet.vim--Abshire'
Bundle 'wavded/vim-stylus'

" ----------------------------------------------------------------------------
"  Colors
" ----------------------------------------------------------------------------
syntax enable
set background=dark
colorscheme Tomorrow-Night

filetype plugin on
filetype indent on

" ----------------------------------------------------------------------------
"  VIM Settings
" ----------------------------------------------------------------------------

set noswapfile
set nobackup
set encoding=utf-8
set autowrite
set autoread
set laststatus=2
set undodir=~/.backups
set undofile
set history=50
set clipboard=unnamed
set notimeout
set ttimeout
set ttimeoutlen=10
set ttyfast
set mouse=a
set ttymouse=xterm2

set fileformats=unix,dos,mac

set smartindent
set nowrap
set linebreak
set softtabstop=2          " yep, two
set shiftwidth=2           " ..
set tabstop=2
set formatoptions+=n       " support for numbered/bullet lists
set virtualedit=block      " allow virtual edit in visual block ..
set nofoldenable           " dont fold by default

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·

" ----------------------------------------------------------------------------
"  UI
" ----------------------------------------------------------------------------

set hidden
set ruler
set noerrorbells                " No beeps
set number                      " Show line numbers
set backspace=indent,eol,start
set showcmd
set showmode
set nolazyredraw           " turn off lazy redraw
set wildmode=list:longest,full
set wildignore+=*/.hg/*,*/.svn/*,*/vendor/cache/*,*/public/system/*,*/tmp/*,*/log/*,*/.git/*,*/.jhw-cache/*,*/solr/data/*,*/node_modules/*,*/.DS_Store

" ----------------------------------------------------------------------------
" Visual Cues
" ----------------------------------------------------------------------------

set showmatch              " brackets/braces that is
set mat=5                  " duration to show matching brace (1/10 sec)
set incsearch              " do incremental searching
set laststatus=2           " always show the status line
set ignorecase             " ignore case when searching
set smartcase
set hlsearch               " highlight searches

" ----------------------------------------------------------------------------
"  Remapping
" ----------------------------------------------------------------------------

" lead with ,
let mapleader = ","

" shortcut for :
nnoremap ; :

" exit to normal mode with 'jj'
inoremap jj <ESC>

" reflow paragraph with Q in normal and visual mode
nnoremap Q gqap
vnoremap Q gq

" sane movement with wrap turned on
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

" sane window movement
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" sane window creation
nnoremap <silent> vv <C-w>v
nnoremap <silent> ss <C-w>s

" Tab switching
nnoremap <S-l> :tabnext<cr>
nnoremap <S-h> :tabprev<cr>

" Toggle NERDTree
map <C-n> <plug>NERDTreeTabsToggle<CR>

" (un)comment lines with ,+/
map <leader>/ :TComment<cr>
imap <leader>/ <Esc>:TComment<cr>gv

" goto symbol
nmap <C-r> :CtrlPBufTag<cr>
imap <C-r> <esc>:CtrlPBufTag<cr>
nmap <C-R> :CtrlPBufTagAll<cr>
imap <C-R> <esc>:CtrlPBufTagAll<cr>

" goto file
nmap <C-t> :CtrlP<cr>
imap <C-t> <esc>:CtrlP<cr>

" Fixing search
nnoremap / /\v
vnoremap / /\v
nmap <silent> // :nohlsearch<cr>

"(v)im (r)eload
nmap <silent> <leader>vr :so %<cr>

" Semicolon at end of line by typing ;;
inoremap ;; <C-o>A;<esc>

" w!! to write a file as sudo
" stolen from Steve Losh
cmap w!! w !sudo tee % >/dev/null

" ---------------------------------------------------------------------------
"  Plugin settings
" ---------------------------------------------------------------------------

let g:ctrlp_map = '<C-p>'
let g:ctrlp_cmd = 'CtrlPMixed'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_match_window_bottom = 0
let g:ctrlp_max_height = 10
let g:ctrlp_switch_buffer = 'et'
let g:ctrlp_use_caching = 1
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_show_hidden = 1
let g:ctrlp_mruf_max = 250

let g:ctrlp_buftag_types = {
\ 'go'         : '--language-force=go --golang-types=ftv',
\ 'coffee'     : '--language-force=coffee --coffee-types=cmfvf',
\ 'markdown'   : '--language-force=markdown --markdown-types=hik',
\ 'objc'       : '--language-force=objc --objc-types=mpci',
\ 'rc'         : '--language-force=rust --rust-types=fTm'
\ }

let g:ycm_autoclose_preview_window_after_completion = 1

" Make nerdtree look nice
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let g:NERDTreeWinSize = 30

" Don't auto open nerd tree on startup
let g:nerdtree_tabs_open_on_gui_startup = 0
" Focus in the main content window
let g:nerdtree_tabs_focus_on_files = 1

" ---------------------------------------------------------------------------
"  Auto cmd stuff for file types
" ---------------------------------------------------------------------------

if has("autocmd")
	autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
	autocmd FileType mkd,txt setlocal wrap linebreak nolist
endif

au BufRead,BufNewFile *.aspx,*.asmx,*.ascx set filetype=aspnet

augroup markdown
	au!
	au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
augroup END
