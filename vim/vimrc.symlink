set nocompatible
set noswapfile
set encoding=utf-8

if has('win32') || has('win64')
	set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after
endif

" ----------------------------------------------------------------------------
"  Pathogen
" ----------------------------------------------------------------------------
call pathogen#infect()
call pathogen#helptags()

" ----------------------------------------------------------------------------
"  Colors
" ----------------------------------------------------------------------------
syntax enable
let g:solarized_termcolors=256
set background=light
colorscheme solarized

filetype plugin on
filetype indent on

" ----------------------------------------------------------------------------
"  Text Formatting
" ----------------------------------------------------------------------------
"
set autoindent             " automatic indent new lines
set smartindent            " be smart about it
inoremap # X<BS>#
set nowrap                 " don't wrap lines
set linebreak
set softtabstop=2          " yep, two
set shiftwidth=2           " ..
set tabstop=2
"set expandtab             " expand tabs to spaces
"set nosmarttab            " fuck tabs
set formatoptions+=n       " support for numbered/bullet lists
"set textwidth=80          " wrap at 80 chars by default
set virtualedit=block      " allow virtual edit in visual block ..
set foldmethod=indent      " fold based on indent
set foldnestmax=10         " deepest fold is 10 levels
set nofoldenable           " dont fold by default
set foldlevel=1            " this is just what i use

" Display tabs and trailing spaces visually
if has('win32') || has('win64')
	set list listchars=tab:\ \ ,trail:.
else
	set list listchars=tab:\ \ ,trail:Â·
endif

" ----------------------------------------------------------------------------
"  VIM Settings
" ----------------------------------------------------------------------------
silent !mkdir ~/.vim/backups > /dev/null 2>&1
set undodir=~/.vim/backups
set undofile
set clipboard=unnamed

" ----------------------------------------------------------------------------
"  Remapping
" ----------------------------------------------------------------------------

" lead with ,
let mapleader = ","

" shortcut for :
nnoremap ; :

" exit to normal mode with 'jj'
inoremap jj <ESC>

" reflow paragraph with Q in normal and visual mode
nnoremap Q gqap
vnoremap Q gq

" sane movement with wrap turned on
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

" sane window movement
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" sane window creation
nnoremap <silent> vv <C-w>v
nnoremap <silent> ss <C-w>s

" Toggle NERDTree
map <Leader>n <plug>NERDTreeTabsToggle<CR>
" Nerd Commenter
nmap <leader>/ :call NERDComment(0, "invert")<cr>
vmap <leader>/ :call NERDComment(0, "invert")<cr>
map <Leader>cc <plug>NERDComComment<cr>
map <Leader>cu <plug>NERDComUncommentLine<cr>

" Completion with TAB
imap <Tab> <C-P>

" Fixing search
nnoremap / /\v
vnoremap / /\v
nmap <silent> // :nohlsearch<cr>

" Reload vim
nmap <silent> <leader>vr :so %<cr>

" ----------------------------------------------------------------------------
"  UI
" ----------------------------------------------------------------------------

set ruler                  " show the cursor position all the time
set noshowcmd              " don't display incomplete commands
set nolazyredraw           " turn off lazy redraw
set number                 " line numbers
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set ch=2                   " command line height
set backspace=2            " allow backspacing over everything in insert mode
set whichwrap+=<,>,h,l,[,] " backspace and cursor keys wrap to
set shortmess=filtIoOA     " shorten messages
set report=0               " tell us about changes
set nostartofline          " don't jump to the start of line when scrolling


" ----------------------------------------------------------------------------
" Visual Cues
" ----------------------------------------------------------------------------

set showmatch              " brackets/braces that is
set mat=5                  " duration to show matching brace (1/10 sec)
set incsearch              " do incremental searching
set laststatus=2           " always show the status line
set ignorecase             " ignore case when searching
set smartcase
set gdefault
set hlsearch               " highlight searches
set visualbell             " shut the fuck up

" ---------------------------------------------------------------------------
"  Strip all trailing whitespace in file
" ---------------------------------------------------------------------------

function! StripWhitespace ()
	exec ':%s/ \+$//gc'
endfunction
map ,s :call StripWhitespace ()<CR>

" ---------------------------------------------------------------------------
"  Auto cmd stuff for file types
" ---------------------------------------------------------------------------

if has("autocmd")
	autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
	autocmd FileType mkd,txt setlocal wrap linebreak nolist
endif

" ---------------------------------------------------------------------------
"  Load plugin settings
" ---------------------------------------------------------------------------
for f in split(glob('~/.vim/plugin/settings/*.vim'), '\n')
  exe 'source' f
endfor
