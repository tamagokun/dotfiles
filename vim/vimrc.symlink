set nocompatible
set noswapfile
set encoding=utf-8

if has('win32') || has('win64')
	set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after
endif

" ----------------------------------------------------------------------------
"  Vundle
" ----------------------------------------------------------------------------
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'
" Utilities & Add-Ons
Bundle 'Valloric/YouCompleteMe'
Bundle 'Lokaltog/vim-powerline'
Bundle 'MarcWeber/ultisnips'
Bundle 'honza/snipmate-snippets'
Bundle 'Raimondi/delimitMate'
Bundle 'scrooloose/syntastic'
Bundle 'tpope/vim-fugitive'
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
Bundle 'kien/ctrlp.vim'
Bundle 'scrooloose/nerdtree'
Bundle 'jistr/vim-nerdtree-tabs'
Bundle 'tomtom/tcomment_vim'
Bundle 'mileszs/ack.vim'
" Colors
Bundle 'skwp/vim-colors-solarized'
" html/css
Bundle 'vim-scripts/HTML-AutoCloseTag'
Bundle 'skammer/vim-css-color'
Bundle 'Valloric/MatchTagAlways'
" php
Bundle 'shawncplus/phpcomplete.vim'
" ruby
Bundle 'vim-ruby/vim-ruby'

" Filetypes & Syntax Highlighting
Bundle 'othree/html5.vim'
Bundle 'tpope/vim-haml'
Bundle 'vim-scripts/JSON.vim'
Bundle 'cakebaker/scss-syntax.vim'
Bundle 'kchmck/vim-coffee-script'
Bundle 'vim-scripts/jade.vim'
Bundle 'slim-template/vim-slim'
Bundle 'jtratner/vim-flavored-markdown'
Bundle 'StanAngeloff/php.vim'
Bundle 'vim-scripts/aspnet.vim--Abshire'

" ----------------------------------------------------------------------------
"  Colors
" ----------------------------------------------------------------------------
syntax enable
set background=dark
colorscheme Tomorrow-Night

filetype plugin on
filetype indent on

" ----------------------------------------------------------------------------
"  Text Formatting
" ----------------------------------------------------------------------------
"
set autoindent             " automatic indent new lines
set smartindent            " be smart about it
inoremap # X<BS>#
set nowrap                 " don't wrap lines
set linebreak
set softtabstop=2          " yep, two
set shiftwidth=2           " ..
set tabstop=2
" set expandtab             " expand tabs to spaces
" set noexpandtab           " don't fuck tabs
" set nosmarttab            " fuck tabs
set formatoptions+=n       " support for numbered/bullet lists
set textwidth=80           " wrap at 80 chars by default
set virtualedit=block      " allow virtual edit in visual block ..
set nofoldenable           " dont fold by default

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·

" ----------------------------------------------------------------------------
"  VIM Settings
" ----------------------------------------------------------------------------
silent !mkdir ~/.backups > /dev/null 2>&1
set undodir=~/.backups
set undofile
set clipboard=unnamed

" ----------------------------------------------------------------------------
"  Remapping
" ----------------------------------------------------------------------------

" lead with ,
let mapleader = ","

" shortcut for :
nnoremap ; :

" exit to normal mode with 'jj'
inoremap jj <ESC>

" reflow paragraph with Q in normal and visual mode
nnoremap Q gqap
vnoremap Q gq

" sane movement with wrap turned on
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

" sane window movement
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" sane window creation
nnoremap <silent> vv <C-w>v
nnoremap <silent> ss <C-w>s

" Toggle NERDTree
map <Leader>n <plug>NERDTreeTabsToggle<CR>

" Comment/Uncomment
map <leader>/ :TComment<CR>
imap <leader>/ <Esc>:TComment<CR>i

" Fixing search
nnoremap / /\v
vnoremap / /\v
nmap <silent> // :nohlsearch<cr>

"(v)im (r)eload
nmap <silent> ,vr :so %<CR>

" Semicolon at end of line by typing ;;
inoremap ;; <C-o>A;<esc>

"When typing a string, your quotes auto complete. Move past the quote
"while still in insert mode by hitting Ctrl-a. Example:
"
" type 'foo<c-a>
"
" the first quote will autoclose so you'll get 'foo' and hitting <c-a> will
" put the cursor right after the quote
imap <C-a> <esc>wa

" w!! to write a file as sudo
" stolen from Steve Losh
cmap w!! w !sudo tee % >/dev/null

" ----------------------------------------------------------------------------
"  UI
" ----------------------------------------------------------------------------

set ruler                  " show the cursor position all the time
set noshowcmd              " don't display incomplete commands
set nolazyredraw           " turn off lazy redraw
set number                 " line numbers
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set ch=2                   " command line height
set backspace=2            " allow backspacing over everything in insert mode
set whichwrap+=<,>,h,l,[,] " backspace and cursor keys wrap to
set shortmess=filtIoOA     " shorten messages
set report=0               " tell us about changes
set nostartofline          " don't jump to the start of line when scrolling


" ----------------------------------------------------------------------------
" Visual Cues
" ----------------------------------------------------------------------------

set showmatch              " brackets/braces that is
set mat=5                  " duration to show matching brace (1/10 sec)
set incsearch              " do incremental searching
set laststatus=2           " always show the status line
set ignorecase             " ignore case when searching
set smartcase
set gdefault
set hlsearch               " highlight searches
set visualbell             " shut the fuck up

" ---------------------------------------------------------------------------
"  Strip all trailing whitespace in file
" ---------------------------------------------------------------------------

function! StripWhitespace ()
	exec ':%s/ \+$//gc'
endfunction
map ,s :call StripWhitespace ()<CR>

" ---------------------------------------------------------------------------
"  Auto cmd stuff for file types
" ---------------------------------------------------------------------------

if has("autocmd")
	autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
	autocmd FileType mkd,txt setlocal wrap linebreak nolist
endif

au BufRead,BufNewFile *.aspx,*.asmx,*.ascx set filetype=aspnet

augroup markdown
	au!
	au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
augroup END

" ---------------------------------------------------------------------------
"  Load plugin settings
" ---------------------------------------------------------------------------
for f in split(glob('~/.vim/plugin/settings/*.vim'), '\n')
	exe 'source' f
endfor
